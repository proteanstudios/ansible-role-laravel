---
- name: check git access_key existing
  stat: 
    path: "{{ git_access_key_path_on_server }}"
  register: git_key

- name: copy access key if not existing
  copy:
    src: "{{ git_access_key }}"  
    dest: "{{ git_access_key_path_on_server }}"  
    force: true
    mode: 0400
  when: git_key.stat.exists == false or git_key.stat.isreg == false

- name: ensure github.com is a known host
  lineinfile:
    dest: ~/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa gitlab.com') }}"
    regexp: "^gitlab\\.com"

- name: "Clone repo on branch {{ branch }}"
  git:
    key_file: "{{ git_access_key_path_on_server }}"
    dest: "{{ new_release_dir }}"
    repo: "{{ repo_url }}"
    version: "{{ branch }}"
    update: no

- name: Configure sparse checkout
  git_config:
    repo: "{{ new_release_dir }}"
    name: core.sparsecheckout
    scope: local
    value: 'true'

- name: Copy sparse-checkout
  copy:
    src: sparse-checkout
    dest: "{{ new_release_dir }}/.git/info/sparse-checkout"

- name: Reset folder to only contain sparse structure
  shell: git read-tree -mu HEAD
  args:
    chdir: "{{ new_release_dir }}"
